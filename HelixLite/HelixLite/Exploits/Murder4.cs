using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using HelixLiteModule;
using MelonLoader;
using TMPro;
using UnityEngine;
using VRC.SDKBase;
using VRC.Udon;

namespace HelixLite.Exploits
{
	// Token: 0x02000028 RID: 40
	[NullableContext(1)]
	[Nullable(0)]
	internal class Murder4
	{
		// Token: 0x040000A9 RID: 169
		public static GameObject M4Shotgun;

		// Token: 0x040000AA RID: 170
		public static GameObject M4Revolver;

		// Token: 0x040000AB RID: 171
		public static List<GameObject> doors = new List<GameObject>();

		// Token: 0x02000055 RID: 85
		[Nullable(0)]
		public class Target
		{
			// Token: 0x060001DA RID: 474 RVA: 0x0000B6D4 File Offset: 0x000098D4
			public static void SetBystander(VRCPlayer target)
			{
				Murder4.Utils.GetPlayersUdonBehaviour(target).SendCustomNetworkEvent(0, "SyncAssignB");
			}

			// Token: 0x060001DB RID: 475 RVA: 0x0000B6E7 File Offset: 0x000098E7
			public static void SetMurderer(VRCPlayer target)
			{
				Murder4.Utils.GetPlayersUdonBehaviour(target).SendCustomNetworkEvent(0, "SyncAssignM");
			}

			// Token: 0x060001DC RID: 476 RVA: 0x0000B6FA File Offset: 0x000098FA
			public static void SetDetective(VRCPlayer target)
			{
				Murder4.Utils.GetPlayersUdonBehaviour(target).SendCustomNetworkEvent(0, "SyncAssignD");
			}

			// Token: 0x060001DD RID: 477 RVA: 0x0000B70D File Offset: 0x0000990D
			public static void ForceKill(VRCPlayer target)
			{
				Murder4.Utils.GetPlayersUdonBehaviour(target).SendCustomNetworkEvent(0, "SyncKill");
			}

			// Token: 0x060001DE RID: 478 RVA: 0x0000B720 File Offset: 0x00009920
			public static void TargetSmoke(VRCPlayer target)
			{
				Murder4.Utils.SmokeByVector3(target.transform.position);
			}

			// Token: 0x060001DF RID: 479 RVA: 0x0000B733 File Offset: 0x00009933
			public static void TargetExplode(VRCPlayer target)
			{
				Murder4.Utils.GranadeExplodeByVector3(target.transform.position);
			}

			// Token: 0x060001E0 RID: 480 RVA: 0x0000B746 File Offset: 0x00009946
			public static IEnumerator TargetLoopPlayer(VRCPlayer target)
			{
				float startTime = Time.time;
				UdonBehaviour UdonObject = Murder4.Utils.GetPlayersUdonBehaviour(target);
				while (Murder4.Target.TargetLoop)
				{
					UdonObject.SendCustomNetworkEvent(0, "SyncAssignB");
					while (Time.time < startTime + 0.08f)
					{
						yield return null;
					}
					startTime = Time.time;
					UdonObject.SendCustomNetworkEvent(0, "SyncKill");
					while (Time.time < startTime + 0.06f)
					{
						yield return null;
					}
					startTime = Time.time;
				}
				yield break;
			}

			// Token: 0x060001E1 RID: 481 RVA: 0x0000B755 File Offset: 0x00009955
			public static IEnumerator DoorAnnoyance(VRCPlayer target)
			{
				float startTime = Time.time;
				while (Time.time < startTime + 0.1f)
				{
					yield return null;
				}
				startTime = Time.time;
				List<GameObject> Doorlist = Murder4.doors;
				while (Murder4.Target.doorannoyancemode)
				{
					using (List<GameObject>.Enumerator enumerator = Doorlist.GetEnumerator())
					{
						while (enumerator.MoveNext())
						{
							GameObject gameObject = enumerator.Current;
							if (Vector3.Distance(gameObject.transform.position, target.transform.position) < 5f)
							{
								Transform transform = gameObject.transform.Find("Door Anim/Hinge/Interact close");
								Component component = gameObject.transform.Find("Door Anim/Hinge/Interact lock");
								transform.GetComponent<UdonBehaviour>().Interact();
								component.GetComponent<UdonBehaviour>().Interact();
							}
						}
						goto IL_011B;
					}
					goto IL_0104;
					IL_011B:
					if (Time.time >= startTime + 6.7f)
					{
						startTime = Time.time;
						continue;
					}
					IL_0104:
					yield return null;
					goto IL_011B;
				}
				while (Time.time < startTime + 0.1f)
				{
					yield return null;
				}
				startTime = Time.time;
				yield break;
			}

			// Token: 0x060001E2 RID: 482 RVA: 0x0000B764 File Offset: 0x00009964
			public static IEnumerator Targetfirerevolver(VRCPlayer Target)
			{
				float startTime = Time.time;
				GameObject OBJ = Murder4.M4Revolver;
				Vector3 OldPosition = OBJ.transform.position;
				if (!Networking.LocalPlayer.IsOwner(OBJ))
				{
					Networking.SetOwner(VRCPlayer.field_Internal_Static_VRCPlayer_0.field_Private_VRCPlayerApi_0, OBJ);
				}
				OBJ.transform.position = Target.transform.position + new Vector3(1f, 1f, 0f);
				OBJ.transform.LookAt(Target.transform.position + new Vector3(0f, 0.5f, 0f));
				OBJ.GetComponent<UdonBehaviour>().SendCustomEvent("Fire");
				if (!Networking.LocalPlayer.IsOwner(OBJ))
				{
					Networking.SetOwner(VRCPlayer.field_Internal_Static_VRCPlayer_0.field_Private_VRCPlayerApi_0, OBJ);
				}
				OBJ.transform.position = Target.transform.position + new Vector3(0f, 1f, 1f);
				OBJ.transform.LookAt(Target.transform.position + new Vector3(0f, 0.5f, 0f));
				OBJ.GetComponent<UdonBehaviour>().SendCustomEvent("Fire");
				if (!Networking.LocalPlayer.IsOwner(OBJ))
				{
					Networking.SetOwner(VRCPlayer.field_Internal_Static_VRCPlayer_0.field_Private_VRCPlayerApi_0, OBJ);
				}
				OBJ.transform.position = Target.transform.position + new Vector3(0f, 1f, -1f);
				OBJ.transform.LookAt(Target.transform.position + new Vector3(0f, 0.5f, 0f));
				OBJ.GetComponent<UdonBehaviour>().SendCustomEvent("Fire");
				while (Time.time < startTime + 0.7f)
				{
					yield return null;
				}
				startTime = Time.time;
				if (!Networking.LocalPlayer.IsOwner(OBJ))
				{
					Networking.SetOwner(VRCPlayer.field_Internal_Static_VRCPlayer_0.field_Private_VRCPlayerApi_0, OBJ);
				}
				OBJ.transform.position = OldPosition;
				while (Time.time < startTime + 0.01f)
				{
					yield return null;
				}
				startTime = Time.time;
				yield break;
			}

			// Token: 0x040001B0 RID: 432
			public static bool TargetLoop;

			// Token: 0x040001B1 RID: 433
			public static bool doorannoyancemode;
		}

		// Token: 0x02000056 RID: 86
		[Nullable(0)]
		public class General
		{
			// Token: 0x060001E4 RID: 484 RVA: 0x0000B77B File Offset: 0x0000997B
			public static void ExplodeGun()
			{
				MelonCoroutines.Start(Murder4.Utils.GranadeExplodeByVector3(Murder4.M4Revolver.transform.position));
			}

			// Token: 0x060001E5 RID: 485 RVA: 0x0000B797 File Offset: 0x00009997
			public static void SmokeGun()
			{
				MelonCoroutines.Start(Murder4.Utils.SmokeByVector3(Murder4.M4Revolver.transform.position));
			}

			// Token: 0x060001E6 RID: 486 RVA: 0x0000B7B4 File Offset: 0x000099B4
			public static void MurderLightsOn()
			{
				List<UdonBehaviour> list = new List<UdonBehaviour>();
				Transform transform = GameObject.Find("Game Logic/Switch Boxes").transform;
				for (int i = 0; i < transform.childCount; i++)
				{
					list.Add(transform.GetChild(i).GetComponent<UdonBehaviour>());
				}
				for (int j = 0; j < list.Count; j++)
				{
					list[j].SendCustomNetworkEvent(0, "SwitchUp");
				}
			}

			// Token: 0x060001E7 RID: 487 RVA: 0x0000B820 File Offset: 0x00009A20
			public static void MurderLightsOff()
			{
				List<UdonBehaviour> list = new List<UdonBehaviour>();
				Transform transform = GameObject.Find("Game Logic/Switch Boxes").transform;
				for (int i = 0; i < transform.childCount; i++)
				{
					list.Add(transform.GetChild(i).GetComponent<UdonBehaviour>());
				}
				for (int j = 0; j < list.Count; j++)
				{
					list[j].SendCustomNetworkEvent(0, "SwitchDown");
				}
			}

			// Token: 0x060001E8 RID: 488 RVA: 0x0000B889 File Offset: 0x00009A89
			public static void FlashAll()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "OnLocalPlayerFlashbanged");
			}

			// Token: 0x060001E9 RID: 489 RVA: 0x0000B8A8 File Offset: 0x00009AA8
			public static void beartrapsmover(GameObject trap, Vector3 location)
			{
				if (RoomManager.field_Private_Static_ApiWorldInstance_1.id.Contains("wrld_858dfdfc-1b48-4e1e-8a43-f0edc611e5fe"))
				{
					Networking.SetOwner(VRCPlayer.field_Internal_Static_VRCPlayer_0.field_Private_VRCPlayerApi_0, trap);
					trap.transform.position = location;
					GameObject.Find(trap.name).GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncArm");
					GameObject.Find(trap.name).GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncDeploy");
				}
			}

			// Token: 0x060001EA RID: 490 RVA: 0x0000B91D File Offset: 0x00009B1D
			public static IEnumerator AutoLockDoors()
			{
				float startTime = Time.time;
				while (Murder4.General.AutoLockDoorsbool)
				{
					Murder4.Utils.DoorEvent("Interact lock");
					while (Time.time < startTime + 0.6f)
					{
						yield return null;
					}
					startTime = Time.time;
				}
				yield break;
			}

			// Token: 0x060001EB RID: 491 RVA: 0x0000B925 File Offset: 0x00009B25
			public static void StartGame()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncCountdown");
			}

			// Token: 0x060001EC RID: 492 RVA: 0x0000B941 File Offset: 0x00009B41
			public static void Abort()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncAbort");
			}

			// Token: 0x060001ED RID: 493 RVA: 0x0000B95D File Offset: 0x00009B5D
			public static void BystanderWin()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncVictoryB");
			}

			// Token: 0x060001EE RID: 494 RVA: 0x0000B979 File Offset: 0x00009B79
			public static void MurderWin()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncVictoryM");
			}

			// Token: 0x040001B2 RID: 434
			public static bool AutoLockDoorsbool;
		}

		// Token: 0x02000057 RID: 87
		[Nullable(0)]
		public class Utils
		{
			// Token: 0x060001F0 RID: 496 RVA: 0x0000B9A0 File Offset: 0x00009BA0
			public static UdonBehaviour GetPlayersUdonBehaviour(VRCPlayer target)
			{
				string text = target._player.ToString();
				VRCPlayerApi field_Private_VRCPlayerApi_ = target.field_Private_VRCPlayerApi_0;
				string text2 = ((field_Private_VRCPlayerApi_ != null) ? field_Private_VRCPlayerApi_.displayName : null);
				VRCPlayerApi field_Private_VRCPlayerApi_2 = VRCPlayer.field_Internal_Static_VRCPlayer_0.field_Private_VRCPlayerApi_0;
				if (text2 == ((field_Private_VRCPlayerApi_2 != null) ? field_Private_VRCPlayerApi_2.displayName : null))
				{
					text = SpoofName.NameInUse;
				}
				for (int i = 0; i < 24; i++)
				{
					string text3 = "Player Node (" + i.ToString() + ")";
					if (GameObject.Find("Game Logic/Game Canvas/Game In Progress/Player List/Player List Group/Player Entry (" + i.ToString() + ")/Player Name Text").GetComponent<TextMeshProUGUI>().text.Equals(text))
					{
						return GameObject.Find(text3).GetComponent<UdonBehaviour>();
					}
				}
				return null;
			}

			// Token: 0x060001F1 RID: 497 RVA: 0x0000BA4C File Offset: 0x00009C4C
			public static void DoorEvent(string anim)
			{
				(from door in Murder4.doors
					select door.transform.Find("Door Anim/Hinge/" + anim) into thing
					where thing != null
					select thing.GetComponent<UdonBehaviour>()).ToList<UdonBehaviour>().ForEach(delegate(UdonBehaviour udonBehaviour)
				{
					udonBehaviour.Interact();
				});
			}

			// Token: 0x060001F2 RID: 498 RVA: 0x0000BAF0 File Offset: 0x00009CF0
			public static void OnMurderJoin()
			{
				if (RoomManager.field_Private_Static_ApiWorldInstance_1.id.Contains("wrld_858dfdfc-1b48-4e1e-8a43-f0edc611e5fe") || RoomManager.field_Private_Static_ApiWorldInstance_1.id.Contains("wrld_dd036610-a246-4f52-bf01-9d7cea3405d7"))
				{
					try
					{
						if (Murder4.doors.Count != 0)
						{
							Murder4.doors.Clear();
						}
						Murder4.doors.AddRange(new GameObject[]
						{
							GameObject.Find("Door"),
							GameObject.Find("Door (3)"),
							GameObject.Find("Door (4)"),
							GameObject.Find("Door (5)"),
							GameObject.Find("Door (6)"),
							GameObject.Find("Door (7)"),
							GameObject.Find("Door (15)"),
							GameObject.Find("Door (16)"),
							GameObject.Find("Door (8)"),
							GameObject.Find("Door (13)"),
							GameObject.Find("Door (17)"),
							GameObject.Find("Door (18)"),
							GameObject.Find("Door (19)"),
							GameObject.Find("Door (20)"),
							GameObject.Find("Door (21)"),
							GameObject.Find("Door (22)"),
							GameObject.Find("Door (23)"),
							GameObject.Find("Door (14)")
						});
					}
					catch
					{
					}
					Murder4.M4Shotgun = GameObject.Find("Game Logic/Weapons/Unlockables/Shotgun (0");
					Murder4.M4Revolver = GameObject.Find("Game Logic/Weapons/Revolver");
					GameObject.Find("Game Logic/Player HUD/Blind HUD Anim").active = false;
					GameObject.Find("Game Logic/Player HUD/Flashbang HUD Anim").active = false;
					GameObject.Find("Game Logic/Player HUD/Death HUD Anim").active = false;
					MelonLogger.Msg("Loaded Murder Shit");
				}
			}

			// Token: 0x060001F3 RID: 499 RVA: 0x0000BCC0 File Offset: 0x00009EC0
			public static IEnumerator SmokeByVector3(Vector3 Pos)
			{
				float startTime = Time.time;
				GameObject gameObject = GameObject.Find("Game Logic/Weapons/Unlockables/Smoke (0)/Intact");
				GameObject gameObject2 = GameObject.Find("Game Logic/Weapons/Unlockables/Smoke (0)");
				gameObject.active = true;
				Vector3 oldpos = gameObject2.transform.position;
				if (!Networking.LocalPlayer.IsOwner(gameObject2))
				{
					Networking.SetOwner(VRCPlayer.field_Internal_Static_VRCPlayer_0.field_Private_VRCPlayerApi_0, gameObject2);
				}
				gameObject2.transform.position = Pos + new Vector3(0f, 0.1f, 0f);
				gameObject2.GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "Explode");
				while (Time.time < startTime + 15f)
				{
					yield return null;
				}
				startTime = Time.time;
				gameObject.active = true;
				gameObject2.transform.position = oldpos;
				yield break;
			}

			// Token: 0x060001F4 RID: 500 RVA: 0x0000BCCF File Offset: 0x00009ECF
			public static IEnumerator GranadeExplodeByVector3(Vector3 Pos)
			{
				float startTime = Time.time;
				GameObject gameObject = GameObject.Find("Game Logic/Weapons/Unlockables/Frag (0)/Intact");
				GameObject gameObject2 = GameObject.Find("Game Logic/Weapons/Unlockables/Frag (0)");
				gameObject.active = true;
				Vector3 oldpos = gameObject2.transform.position;
				if (!Networking.LocalPlayer.IsOwner(gameObject2))
				{
					Networking.SetOwner(VRCPlayer.field_Internal_Static_VRCPlayer_0.field_Private_VRCPlayerApi_0, gameObject2);
				}
				gameObject2.transform.position = Pos + new Vector3(0f, 0.1f, 0f);
				gameObject2.GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "Explode");
				gameObject.active = true;
				while (Time.time < startTime + 2f)
				{
					yield return null;
				}
				startTime = Time.time;
				gameObject.active = true;
				gameObject2.transform.position = oldpos;
				yield break;
			}
		}
	}
}
