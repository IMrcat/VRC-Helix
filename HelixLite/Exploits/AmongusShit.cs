using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using HelixLiteModule;
using Il2CppSystem;
using MelonLoader;
using UnityEngine;
using UnityEngine.UI;
using Values;
using VRC;
using VRC.SDKBase;
using VRC.Udon;

namespace Exploits
{
	// Token: 0x02000029 RID: 41
	[NullableContext(1)]
	[Nullable(0)]
	internal class AmongusShit
	{
		// Token: 0x040000AC RID: 172
		public static bool AnyKill;

		// Token: 0x02000058 RID: 88
		[Nullable(0)]
		public static class Target
		{
			// Token: 0x060001F6 RID: 502 RVA: 0x0000BCE6 File Offset: 0x00009EE6
			public static IEnumerator targetReport(VRCPlayer target)
			{
				float startTime = Time.time;
				target._player.ToString();
				GameObject.Find(AmongusShit.Generic.lookforplayer(target)).GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncPlayerIsReporter");
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "StartMeeting");
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncEmergencyMeeting");
				while (Time.time < startTime + 0.09f)
				{
					yield return null;
				}
				startTime = Time.time;
				yield break;
			}

			// Token: 0x060001F7 RID: 503 RVA: 0x0000BCF5 File Offset: 0x00009EF5
			public static void SyncKill(VRCPlayer target)
			{
				GameObject.Find(AmongusShit.Generic.lookforplayer(target)).GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncKill");
			}

			// Token: 0x060001F8 RID: 504 RVA: 0x0000BD12 File Offset: 0x00009F12
			public static IEnumerator targetEveryoneVoteOut(VRCPlayer target)
			{
				float startTime = Time.time;
				string num = AmongusShit.Generic.GetNodeNumber(target);
				Random random = new Random();
				List<Player> allPlayers = others.GetAllPlayers();
				int num2 = allPlayers.Count<Player>();
				int num3 = Mathf.Max(2, num2 / 2 + 1);
				IEnumerable<Player> enumerable = allPlayers.OrderBy((Player x) => random.Next()).ToList<Player>().Take(num3);
				foreach (Player player in enumerable)
				{
					GameObject.Find(AmongusShit.Generic.lookforplayer(player._vrcplayer)).GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncVotedFor" + num);
					float randomDelay = (float)(random.NextDouble() * 1.99 + 0.01);
					while (Time.time < startTime + randomDelay)
					{
						yield return null;
					}
					startTime = Time.time;
				}
				IEnumerator<Player> enumerator = null;
				yield break;
				yield break;
			}

			// Token: 0x060001F9 RID: 505 RVA: 0x0000BD21 File Offset: 0x00009F21
			public static IEnumerator ObviousTargetOut(VRCPlayer target)
			{
				float startTime = Time.time;
				string num = AmongusShit.Generic.GetNodeNumber(target);
				foreach (Player player in others.GetAllPlayers())
				{
					GameObject.Find(AmongusShit.Generic.lookforplayer(player._vrcplayer)).GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncVotedFor" + num);
					while (Time.time < startTime + 0.03f)
					{
						yield return null;
					}
					startTime = Time.time;
				}
				List<Player>.Enumerator enumerator = default(List<Player>.Enumerator);
				yield break;
				yield break;
			}

			// Token: 0x060001FA RID: 506 RVA: 0x0000BD30 File Offset: 0x00009F30
			public static IEnumerator targetLoopPlayer(VRCPlayer target)
			{
				float startTime = Time.time;
				UdonBehaviour UdonObject = GameObject.Find(AmongusShit.Generic.lookforplayer(target)).GetComponent<UdonBehaviour>();
				while (AmongusShit.Target.TargetLoop)
				{
					UdonObject.SendCustomNetworkEvent(0, "SyncAssignB");
					while (Time.time < startTime + 0.09f)
					{
						yield return null;
					}
					startTime = Time.time;
					UdonObject.SendCustomNetworkEvent(0, "SyncKill");
					while (Time.time < startTime + 0.06f)
					{
						yield return null;
					}
					startTime = Time.time;
				}
				yield break;
			}

			// Token: 0x060001FB RID: 507 RVA: 0x0000BD3F File Offset: 0x00009F3F
			public static void targetBystander(VRCPlayer target)
			{
				GameObject.Find(AmongusShit.Generic.lookforplayer(target)).GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncAssignB");
			}

			// Token: 0x060001FC RID: 508 RVA: 0x0000BD5C File Offset: 0x00009F5C
			public static void targetSus(VRCPlayer target)
			{
				GameObject.Find(AmongusShit.Generic.lookforplayer(target)).GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncAssignM");
			}

			// Token: 0x060001FD RID: 509 RVA: 0x0000BD79 File Offset: 0x00009F79
			public static void TargetEject(VRCPlayer target)
			{
				GameObject.Find(AmongusShit.Generic.lookforplayer(target)).GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncVotedOut");
			}

			// Token: 0x040001B3 RID: 435
			public static bool TargetLoop;
		}

		// Token: 0x02000059 RID: 89
		[Nullable(0)]
		public static class Generic
		{
			// Token: 0x060001FE RID: 510 RVA: 0x0000BD96 File Offset: 0x00009F96
			public static IEnumerator anykill()
			{
				List<GameObject> list = new List<GameObject>();
				for (int i = 0; i < 24; i++)
				{
					list.Add(GameObject.Find("Game Logic/Player Nodes/Player Node (" + i.ToString() + ")/Player Kill Button").gameObject);
				}
				while (AmongusShit.AnyKill)
				{
					foreach (GameObject gameObject in list)
					{
						gameObject.SetActive(true);
					}
					yield return new WaitForSeconds(0.5f);
				}
				yield break;
			}

			// Token: 0x060001FF RID: 511 RVA: 0x0000BDA0 File Offset: 0x00009FA0
			public static string lookforplayer(VRCPlayer target)
			{
				string text = target._player.ToString();
				VRCPlayerApi field_Private_VRCPlayerApi_ = target.field_Private_VRCPlayerApi_0;
				string text2 = ((field_Private_VRCPlayerApi_ != null) ? field_Private_VRCPlayerApi_.displayName : null);
				VRCPlayerApi field_Private_VRCPlayerApi_2 = VRCPlayer.field_Internal_Static_VRCPlayer_0.field_Private_VRCPlayerApi_0;
				if (text2 == ((field_Private_VRCPlayerApi_2 != null) ? field_Private_VRCPlayerApi_2.displayName : null))
				{
					text = SpoofName.NameInUse;
				}
				for (int i = 0; i < 24; i++)
				{
					string text3 = "Player Node (" + i.ToString() + ")";
					if (GameObject.Find("Game Logic/Game Canvas/Game In Progress/Player List/Player List Group/Player Entry (" + i.ToString() + ")/Player Name Text").GetComponent<Text>().text.Equals(text))
					{
						return text3;
					}
				}
				return string.Empty;
			}

			// Token: 0x06000200 RID: 512 RVA: 0x0000BE48 File Offset: 0x0000A048
			public static string GetNodeNumber(VRCPlayer target)
			{
				string text = target._player.ToString();
				for (int i = 0; i < 24; i++)
				{
					"Player Node (" + i.ToString() + ")";
					if (GameObject.Find("Game Logic/Game Canvas/Game In Progress/Player List/Player List Group/Player Entry (" + i.ToString() + ")/Player Name Text").GetComponent<Text>().text.Equals(text))
					{
						return i.ToString();
					}
				}
				return string.Empty;
			}

			// Token: 0x06000201 RID: 513 RVA: 0x0000BEBF File Offset: 0x0000A0BF
			public static IEnumerator SkipEveryone()
			{
				float startTime = Time.time;
				foreach (Player player in others.GetAllPlayers())
				{
					GameObject.Find(AmongusShit.Generic.lookforplayer(player._vrcplayer)).GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncAbstainedVoting");
					while (Time.time < startTime + 0.01f)
					{
						yield return null;
					}
					startTime = Time.time;
				}
				List<Player>.Enumerator enumerator = default(List<Player>.Enumerator);
				yield break;
				yield break;
			}

			// Token: 0x06000202 RID: 514 RVA: 0x0000BEC7 File Offset: 0x0000A0C7
			public static void StartGame()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncCountdown");
			}

			// Token: 0x06000203 RID: 515 RVA: 0x0000BEE3 File Offset: 0x0000A0E3
			public static void Abprt()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncAbort");
			}

			// Token: 0x06000204 RID: 516 RVA: 0x0000BEFF File Offset: 0x0000A0FF
			public static void BystanderWin()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncVictoryC");
			}

			// Token: 0x06000205 RID: 517 RVA: 0x0000BF1B File Offset: 0x0000A11B
			public static void SusWin()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncVictoryI");
			}

			// Token: 0x06000206 RID: 518 RVA: 0x0000BF37 File Offset: 0x0000A137
			public static IEnumerator EjectAll()
			{
				float startTime = Time.time;
				foreach (Player player in others.GetAllPlayers())
				{
					AmongusShit.Target.TargetEject(player._vrcplayer);
					while (Time.time < startTime + 0.01f)
					{
						yield return null;
					}
					startTime = Time.time;
				}
				List<Player>.Enumerator enumerator = default(List<Player>.Enumerator);
				yield break;
				yield break;
			}

			// Token: 0x06000207 RID: 519 RVA: 0x0000BF40 File Offset: 0x0000A140
			public static void EnableVents()
			{
				GameObject[] array = Object.FindObjectsOfType<GameObject>();
				for (int i = 0; i < array.Length; i++)
				{
					if (array[i].name.ToLower().Contains("vent") && array[i].GetComponent<Collider>())
					{
						array[i].GetComponent<Collider>().enabled = true;
					}
				}
			}

			// Token: 0x06000208 RID: 520 RVA: 0x0000BF9C File Offset: 0x0000A19C
			public static void MedbadDoor()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncDoSabotageDoorsMedbay");
			}

			// Token: 0x06000209 RID: 521 RVA: 0x0000BFB8 File Offset: 0x0000A1B8
			public static void LowerDoor()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncDoSabotageDoorsLower");
			}

			// Token: 0x0600020A RID: 522 RVA: 0x0000BFD4 File Offset: 0x0000A1D4
			public static void UpperDoor()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncDoSabotageDoorsUpper");
			}

			// Token: 0x0600020B RID: 523 RVA: 0x0000BFF0 File Offset: 0x0000A1F0
			public static void CafeteriaDoor()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncDoSabotageDoorsCafeteria");
			}

			// Token: 0x0600020C RID: 524 RVA: 0x0000C00C File Offset: 0x0000A20C
			public static void StorageDoor()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncDoSabotageDoorsStorage");
			}

			// Token: 0x0600020D RID: 525 RVA: 0x0000C028 File Offset: 0x0000A228
			public static void SecurityDoor()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncDoSabotageDoorsSecurity");
			}

			// Token: 0x0600020E RID: 526 RVA: 0x0000C044 File Offset: 0x0000A244
			public static void ElectricalDoor()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncDoSabotageDoorsElectrical");
			}

			// Token: 0x0600020F RID: 527 RVA: 0x0000C060 File Offset: 0x0000A260
			public static void Oxygen()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncDoSabotageOxygen");
			}

			// Token: 0x06000210 RID: 528 RVA: 0x0000C07C File Offset: 0x0000A27C
			public static void Coms()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncDoSabotageComms");
			}

			// Token: 0x06000211 RID: 529 RVA: 0x0000C098 File Offset: 0x0000A298
			public static void Reactor()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncDoSabotageReactor");
			}

			// Token: 0x06000212 RID: 530 RVA: 0x0000C0B4 File Offset: 0x0000A2B4
			public static void Lights()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncDoSabotageLights");
			}

			// Token: 0x06000213 RID: 531 RVA: 0x0000C0D0 File Offset: 0x0000A2D0
			public static void StopSabbo()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "CancelAllSabotage");
			}

			// Token: 0x06000214 RID: 532 RVA: 0x0000C0EC File Offset: 0x0000A2EC
			public static void SyncRepairComms()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncRepairComms");
			}

			// Token: 0x06000215 RID: 533 RVA: 0x0000C108 File Offset: 0x0000A308
			public static void SyncRepairLights()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncRepairLights");
			}

			// Token: 0x06000216 RID: 534 RVA: 0x0000C124 File Offset: 0x0000A324
			public static void SyncRepairOxygenA()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncRepairOxygenA");
			}

			// Token: 0x06000217 RID: 535 RVA: 0x0000C140 File Offset: 0x0000A340
			public static void SyncRepairOxygenB()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncRepairOxygenB");
			}

			// Token: 0x06000218 RID: 536 RVA: 0x0000C15C File Offset: 0x0000A35C
			public static void SyncRepairOxygenAB()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncRepairOxygenA");
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncRepairOxygenB");
			}

			// Token: 0x06000219 RID: 537 RVA: 0x0000C192 File Offset: 0x0000A392
			public static void SyncRepairReactor()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncRepairReactor");
			}

			// Token: 0x0600021A RID: 538 RVA: 0x0000C1AE File Offset: 0x0000A3AE
			public static void SyncVoteResultTie()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncVoteResultTie");
			}

			// Token: 0x0600021B RID: 539 RVA: 0x0000C1CA File Offset: 0x0000A3CA
			public static void SyncVoteResultSkip()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncVoteResultSkip");
			}

			// Token: 0x0600021C RID: 540 RVA: 0x0000C1E6 File Offset: 0x0000A3E6
			public static void SyncVoteResultNobody()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncVoteResultNobody");
			}

			// Token: 0x0600021D RID: 541 RVA: 0x0000C202 File Offset: 0x0000A402
			public static void SyncEndVotingPhase()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncEndVotingPhase");
			}

			// Token: 0x0600021E RID: 542 RVA: 0x0000C21E File Offset: 0x0000A41E
			public static void SyncEmergencyMeeting()
			{
				GameObject.Find("Game Logic").GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "SyncEmergencyMeeting");
			}

			// Token: 0x0600021F RID: 543 RVA: 0x0000C23C File Offset: 0x0000A43C
			public static void targetedTasks(string task, VRCPlayer target)
			{
				GameObject gameObject = GameObject.Find(task);
				Networking.SetOwner(target.field_Private_VRCPlayerApi_0, gameObject);
				gameObject.GetComponent<UdonBehaviour>().SendCustomNetworkEvent(1, "AssignTask");
			}

			// Token: 0x06000220 RID: 544 RVA: 0x0000C270 File Offset: 0x0000A470
			public static void LoadTaskList()
			{
				AmongusShit.Generic.TasksList = null;
				AmongusShit.Generic.TasksList = new List<GameObject>();
				GameObject gameObject = GameObject.Find("Game Logic/Tasks");
				if (gameObject != null)
				{
					foreach (Object @object in gameObject.transform)
					{
						Transform transform = (Transform)@object;
						AmongusShit.Generic.TasksList.Add(transform.gameObject);
						MelonLogger.Msg("Amongus Task: " + transform.gameObject.name);
					}
				}
			}

			// Token: 0x040001B4 RID: 436
			public static List<GameObject> TasksList;
		}
	}
}
