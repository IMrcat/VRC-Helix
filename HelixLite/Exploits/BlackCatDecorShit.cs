using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using MelonLoader;
using MenuZone;
using ReMod.Core.UI.QuickMenu;
using Toast;
using UnityEngine;
using VRC.SDKBase;
using VRC.Udon;

namespace Exploits
{
	// Token: 0x0200002A RID: 42
	internal class BlackCatDecorShit
	{
		// Token: 0x0200005A RID: 90
		[NullableContext(1)]
		[Nullable(0)]
		public class Menu
		{
			// Token: 0x06000221 RID: 545 RVA: 0x0000C310 File Offset: 0x0000A510
			public static IEnumerator Updatein20seconds()
			{
				float startTime = Time.time;
				while (Time.time < startTime + 13f)
				{
					yield return null;
				}
				startTime = Time.time;
				BlackCatDecorShit.Menu.Update();
				ToastNotif.Toast("Loaded into BlackCat!", "Blackcat shit decor, skins & flairs have loaded fully!", null, 5f);
				yield break;
			}

			// Token: 0x06000222 RID: 546 RVA: 0x0000C318 File Offset: 0x0000A518
			public static void Update()
			{
				if (BlackCatDecorShit.Menu.cat1 != null)
				{
					BlackCatDecorShit.Menu.cat1.Active = false;
				}
				BlackCatDecorShit.Menu.cat1 = BlackcatMenu.DecorPage.AddCategory("Decor " + BlackCatDecorShit.Menu.x.ToString());
				GameObject gameObject = GameObject.Find("CREATOR ECONOMY/STORE/CE Store/Canvas/Content/Decorations/Scroll (1)/Panel");
				if (gameObject != null)
				{
					BlackCatDecorShit.Menu.DecorationsDict.Clear();
					for (int i = 0; i < gameObject.transform.GetChildCount(); i++)
					{
						Transform child2 = gameObject.transform.GetChild(i);
						BlackCatDecorShit.Menu.cat1.AddButton(child2.gameObject.name, child2.gameObject.name, delegate
						{
							if (!Networking.LocalPlayer.IsOwner(child2.gameObject))
							{
								Networking.LocalPlayer.TakeOwnership(child2.gameObject);
							}
							child2.gameObject.GetComponent<UdonBehaviour>().SendCustomEvent("_UseButtonGlobal");
						}, null, "#ffffff");
						BlackCatDecorShit.Menu.DecorationsDict.Add(child2.gameObject, "_UseButtonGlobal");
					}
				}
				if (BlackCatDecorShit.Menu.cat2 != null)
				{
					BlackCatDecorShit.Menu.cat2.Active = false;
				}
				BlackCatDecorShit.Menu.cat2 = BlackcatMenu.GoosePage.AddCategory("GooseSkins " + BlackCatDecorShit.Menu.x.ToString());
				gameObject = GameObject.Find("CREATOR ECONOMY/STORE/CE Store/Canvas/Content/Goose/Scroll (2)/Panel");
				if (gameObject != null)
				{
					BlackCatDecorShit.Menu.GooseDict.Clear();
					for (int j = 0; j < gameObject.transform.GetChildCount(); j++)
					{
						Transform child3 = gameObject.transform.GetChild(j);
						BlackCatDecorShit.Menu.cat2.AddButton(child3.gameObject.name, child3.gameObject.name, delegate
						{
							if (!Networking.LocalPlayer.IsOwner(child3.gameObject))
							{
								Networking.LocalPlayer.TakeOwnership(child3.gameObject);
							}
							child3.gameObject.GetComponent<UdonBehaviour>().SendCustomEvent("_UseButton");
						}, null, "#ffffff");
						BlackCatDecorShit.Menu.GooseDict.Add(child3.gameObject, "_UseButton");
					}
				}
				if (BlackCatDecorShit.Menu.cat3 != null)
				{
					BlackCatDecorShit.Menu.cat3.Active = false;
				}
				BlackCatDecorShit.Menu.cat3 = BlackcatMenu.FlairPage.AddCategory("Flairs " + BlackCatDecorShit.Menu.x.ToString());
				gameObject = GameObject.Find("CREATOR ECONOMY/STORE/CE Store/Canvas/Content/Flairs/Scroll (2)/Panel");
				if (gameObject != null)
				{
					BlackCatDecorShit.Menu.FlairDict.Clear();
					for (int k = 0; k < gameObject.transform.GetChildCount(); k++)
					{
						Transform child = gameObject.transform.GetChild(k);
						BlackCatDecorShit.Menu.cat3.AddButton(child.gameObject.name, child.gameObject.name, delegate
						{
							if (!Networking.LocalPlayer.IsOwner(child.gameObject))
							{
								Networking.LocalPlayer.TakeOwnership(child.gameObject);
							}
							child.gameObject.GetComponent<UdonBehaviour>().SendCustomEvent("_SetTag");
						}, null, "#ffffff");
						BlackCatDecorShit.Menu.FlairDict.Add(child.gameObject, "_SetTag");
					}
				}
				BlackCatDecorShit.Menu.x++;
				if (BlackCatDecorShit.Menu.cat12 != null)
				{
					BlackCatDecorShit.Menu.cat12.Active = false;
				}
				BlackCatDecorShit.Menu.cat12 = BlackcatMenu.DecorPage.AddSliderCategory("Sliders " + BlackCatDecorShit.Menu.x.ToString());
				if (BlackCatDecorShit.Menu.cat22 != null)
				{
					BlackCatDecorShit.Menu.cat22.Active = false;
				}
				BlackCatDecorShit.Menu.cat22 = BlackcatMenu.GoosePage.AddSliderCategory("Sliders " + BlackCatDecorShit.Menu.x.ToString());
				if (BlackCatDecorShit.Menu.cat32 != null)
				{
					BlackCatDecorShit.Menu.cat32.Active = false;
				}
				BlackCatDecorShit.Menu.cat32 = BlackcatMenu.FlairPage.AddSliderCategory("Sliders " + BlackCatDecorShit.Menu.x.ToString());
				BlackCatDecorShit.Menu.cat1.AddButton("Loop Spam", "Loop Spam", delegate
				{
					if (!BlackCatDecorShit.Menu.DoLoop1)
					{
						BlackCatDecorShit.Menu.DoLoop1 = true;
						MelonCoroutines.Start(BlackCatDecorShit.Menu.LoopSpam(BlackCatDecorShit.Menu.DecorationsDict, () => BlackCatDecorShit.Menu.DoLoop1, () => BlackCatDecorShit.Menu.udpaterate1, () => BlackCatDecorShit.Menu.IncludeLava));
						ToastNotif.Toast("Starting Decor Spam", null, null, 5f);
					}
				}, null, "#ffffff");
				BlackCatDecorShit.Menu.cat1.AddButton("Stop All Loops", "Loop Spam", delegate
				{
					BlackCatDecorShit.Menu.DoLoop1 = false;
					ToastNotif.Toast("Stopped All Blackcat Loops", null, null, 5f);
				}, null, "#ffffff");
				BlackCatDecorShit.Menu.cat12.AddSlider("UpdateRate", "", delegate(float value)
				{
					BlackCatDecorShit.Menu.udpaterate1 = value;
				}, 1f, 0.3f, 15f, "#ffffff");
				BlackCatDecorShit.Menu.cat1.AddButton("Include Lava?", "Loop Spam", delegate
				{
					BlackCatDecorShit.Menu.IncludeLava = !BlackCatDecorShit.Menu.IncludeLava;
					ToastNotif.Toast("Include Lava", string.Format("Value: {0}", BlackCatDecorShit.Menu.IncludeLava), null, 5f);
				}, null, "#ffffff");
				BlackCatDecorShit.Menu.cat2.AddButton("Loop Spam", "Loop Spam", delegate
				{
					if (!BlackCatDecorShit.Menu.DoLoop2)
					{
						BlackCatDecorShit.Menu.DoLoop2 = true;
						MelonCoroutines.Start(BlackCatDecorShit.Menu.LoopSpam(BlackCatDecorShit.Menu.GooseDict, () => BlackCatDecorShit.Menu.DoLoop2, () => BlackCatDecorShit.Menu.udpaterate2, () => BlackCatDecorShit.Menu.IncludeLava));
						ToastNotif.Toast("Starting Goose Spam", null, null, 5f);
					}
				}, null, "#ffffff");
				BlackCatDecorShit.Menu.cat2.AddButton("Stop Loop", "Loop Spam", delegate
				{
					BlackCatDecorShit.Menu.DoLoop2 = false;
					ToastNotif.Toast("Stopped All Blackcat Loops", null, null, 5f);
				}, null, "#ffffff");
				BlackCatDecorShit.Menu.cat22.AddSlider("UpdateRate", "", delegate(float value)
				{
					BlackCatDecorShit.Menu.udpaterate2 = value;
				}, 1f, 0.3f, 15f, "#ffffff");
				BlackCatDecorShit.Menu.cat3.AddButton("Loop Spam", "Loop Spam", delegate
				{
					if (!BlackCatDecorShit.Menu.DoLoop3)
					{
						BlackCatDecorShit.Menu.DoLoop3 = true;
						MelonCoroutines.Start(BlackCatDecorShit.Menu.LoopSpam(BlackCatDecorShit.Menu.FlairDict, () => BlackCatDecorShit.Menu.DoLoop3, () => BlackCatDecorShit.Menu.udpaterate3, () => BlackCatDecorShit.Menu.IncludeLava));
						ToastNotif.Toast("Starting Flair Spam", null, null, 5f);
					}
				}, null, "#ffffff");
				BlackCatDecorShit.Menu.cat3.AddButton("Stop All Loops", "Loop Spam", delegate
				{
					BlackCatDecorShit.Menu.DoLoop3 = false;
					ToastNotif.Toast("Stopped All Blackcat Loops", null, null, 5f);
				}, null, "#ffffff");
				BlackCatDecorShit.Menu.cat32.AddSlider("UpdateRate", "", delegate(float value)
				{
					BlackCatDecorShit.Menu.udpaterate3 = value;
				}, 1f, 0.3f, 15f, "#ffffff");
			}

			// Token: 0x06000223 RID: 547 RVA: 0x0000C8ED File Offset: 0x0000AAED
			private static IEnumerator LoopSpam(Dictionary<GameObject, string> dict, Func<bool> doLoopFunc, Func<float> updateRateFunc, Func<bool> includeLavaFunc)
			{
				float startTime = Time.time;
				while (Time.time < startTime + 2f)
				{
					yield return null;
				}
				startTime = Time.time;
				while (doLoopFunc())
				{
					foreach (KeyValuePair<GameObject, string> keyValuePair in dict)
					{
						if (doLoopFunc())
						{
							if (includeLavaFunc())
							{
								if (!Networking.LocalPlayer.IsOwner(keyValuePair.Key.gameObject))
								{
									Networking.LocalPlayer.TakeOwnership(keyValuePair.Key.gameObject);
								}
								keyValuePair.Key.GetComponent<UdonBehaviour>().SendCustomEvent(keyValuePair.Value);
							}
							else if (!keyValuePair.Key.name.ToLower().Contains("lava"))
							{
								if (!Networking.LocalPlayer.IsOwner(keyValuePair.Key.gameObject))
								{
									Networking.LocalPlayer.TakeOwnership(keyValuePair.Key.gameObject);
								}
								keyValuePair.Key.GetComponent<UdonBehaviour>().SendCustomEvent(keyValuePair.Value);
							}
						}
						while (Time.time < startTime + updateRateFunc())
						{
							yield return null;
						}
						startTime = Time.time;
					}
					Dictionary<GameObject, string>.Enumerator enumerator = default(Dictionary<GameObject, string>.Enumerator);
					while (Time.time < startTime + 0.1f)
					{
						yield return null;
					}
					startTime = Time.time;
				}
				yield break;
				yield break;
			}

			// Token: 0x040001B5 RID: 437
			private static int x = 0;

			// Token: 0x040001B6 RID: 438
			private static ReMenuCategory cat1;

			// Token: 0x040001B7 RID: 439
			private static ReMenuCategory cat2;

			// Token: 0x040001B8 RID: 440
			private static ReMenuCategory cat3;

			// Token: 0x040001B9 RID: 441
			private static ReMenuSliderCategory cat12;

			// Token: 0x040001BA RID: 442
			private static ReMenuSliderCategory cat22;

			// Token: 0x040001BB RID: 443
			private static ReMenuSliderCategory cat32;

			// Token: 0x040001BC RID: 444
			private static Dictionary<GameObject, string> GooseDict = new Dictionary<GameObject, string>();

			// Token: 0x040001BD RID: 445
			private static Dictionary<GameObject, string> DecorationsDict = new Dictionary<GameObject, string>();

			// Token: 0x040001BE RID: 446
			private static Dictionary<GameObject, string> FlairDict = new Dictionary<GameObject, string>();

			// Token: 0x040001BF RID: 447
			private static float udpaterate1 = 1f;

			// Token: 0x040001C0 RID: 448
			private static float udpaterate2 = 1f;

			// Token: 0x040001C1 RID: 449
			private static float udpaterate3 = 1f;

			// Token: 0x040001C2 RID: 450
			private static bool IncludeLava = false;

			// Token: 0x040001C3 RID: 451
			private static bool DoLoop1;

			// Token: 0x040001C4 RID: 452
			private static bool DoLoop2;

			// Token: 0x040001C5 RID: 453
			private static bool DoLoop3 = false;
		}
	}
}
